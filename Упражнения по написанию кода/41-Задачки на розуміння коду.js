"use strict"

//•	Какое будет выведено значение: 
// let x = 5; alert( x++ ); 
//постфіксні формі повероає початкове значення а тільки потім збільшує-зменшує виведеться 5, 
//а при префіксній буде 6;


//•	Чему равно такое выражение: 
// let x = [ ] + false - null + true;
// console.log(x); //в консоль виведеться NaN;
// пустий масив прирівнюється з пустою строкою, а пуста строка це false


//•	Что выведет этот код: 
// let y = 1; 
// let x = y = 2; //привласнення відбувається зправа на ліво
// alert(x);     // відбувся перезапис у, виведеться 2;

//•	Чему равна сумма 
// let a = [ ] + 1 + 2;
// console.log(a);  
//в консоль виводиться 12;
// оскільки пустий масив це строка [] то відбувається конкатинація до типу string


//•	Что выведет этот код: 
// alert( "1"[0] ) //вивде просто 1 бо [0] - це протсо індекс значення строки


//•	Чему равно 
// let i = 2 && 1 && null && 0 && undefined ;
// console.log(i); //виведе null бо И запнається на false;
// console.log(typeof(null));


//•	Есть ли разница между выражениями? 
// console.log(!!(1 && 2) === (1 && 2));



//•	Что выведет этот код:
// alert( null || 2 && 3 || 4 );
//виведеться 3 чреез вищий пріорітет оператора &&


// •	let a = [1, 2, 3];
//    let b = [1, 2, 3]; //Правда ли что a == b;

//    НІ бо це різні змінні хоч і з однаковими данними;
// на мою думку ні


//•	Что выведет этот код:
// alert( +"Infinity" ); //просто виведе слово Infitiny
// console.log(typeof(+"Infinity"));

//•	Верно ли сравнение: "Ёжик" > "яблоко"
// console.log("Ёжик" > "яблоко");
// гадаю буде false ////через меншу к-ть символів 
//потрібно дивитись таблицю юнікодів бо порівнюються порівння символів поіндексно!!!


//•	Чему равно
// let y = 0 || "" || 2 || undefined || true || falsе;
// console.log(y);
//console.log зупиниться на першому тру, а це 2
